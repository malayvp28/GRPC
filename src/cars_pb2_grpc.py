# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import cars_pb2 as cars__pb2


class UserStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.AddUser = channel.unary_unary(
                '/userGrpc.User/AddUser',
                request_serializer=cars__pb2.UserData.SerializeToString,
                response_deserializer=cars__pb2.UserData.FromString,
                )
        self.UpdateUser = channel.unary_unary(
                '/userGrpc.User/UpdateUser',
                request_serializer=cars__pb2.UserData.SerializeToString,
                response_deserializer=cars__pb2.UserData.FromString,
                )
        self.GetUser = channel.unary_unary(
                '/userGrpc.User/GetUser',
                request_serializer=cars__pb2.UserID.SerializeToString,
                response_deserializer=cars__pb2.UserData.FromString,
                )
        self.RemoveUser = channel.unary_unary(
                '/userGrpc.User/RemoveUser',
                request_serializer=cars__pb2.UserID.SerializeToString,
                response_deserializer=cars__pb2.UserData.FromString,
                )


class UserServicer(object):
    """Missing associated documentation comment in .proto file."""

    def AddUser(self, request, context):
        """POST
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateUser(self, request, context):
        """PUT
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUser(self, request, context):
        """GET
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RemoveUser(self, request, context):
        """DELETE
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_UserServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'AddUser': grpc.unary_unary_rpc_method_handler(
                    servicer.AddUser,
                    request_deserializer=cars__pb2.UserData.FromString,
                    response_serializer=cars__pb2.UserData.SerializeToString,
            ),
            'UpdateUser': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateUser,
                    request_deserializer=cars__pb2.UserData.FromString,
                    response_serializer=cars__pb2.UserData.SerializeToString,
            ),
            'GetUser': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUser,
                    request_deserializer=cars__pb2.UserID.FromString,
                    response_serializer=cars__pb2.UserData.SerializeToString,
            ),
            'RemoveUser': grpc.unary_unary_rpc_method_handler(
                    servicer.RemoveUser,
                    request_deserializer=cars__pb2.UserID.FromString,
                    response_serializer=cars__pb2.UserData.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'userGrpc.User', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class User(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def AddUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/userGrpc.User/AddUser',
            cars__pb2.UserData.SerializeToString,
            cars__pb2.UserData.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/userGrpc.User/UpdateUser',
            cars__pb2.UserData.SerializeToString,
            cars__pb2.UserData.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/userGrpc.User/GetUser',
            cars__pb2.UserID.SerializeToString,
            cars__pb2.UserData.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RemoveUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/userGrpc.User/RemoveUser',
            cars__pb2.UserID.SerializeToString,
            cars__pb2.UserData.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
